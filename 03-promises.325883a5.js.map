{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmBA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYJ,EAAKE,cAAc,sBAC/BG,EAAcL,EAAKE,cAAc,wBAMvC,SAASI,EAAcC,EAAUC,GAC/B,OAAOC,aAAe,IAAIC,SAAQ,CAACC,EAASC,KAC1CC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAACJ,E,MAASC,IAElBI,EAAO,C,SAACL,E,MAASC,MACnBA,MAVNR,EAAKgB,iBAAiB,UAetB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,GAAchB,EAAWiB,MACzBC,GAAajB,EAAUgB,MACvBE,GAAejB,EAAYe,MAAQ,EAEvC,IAAK,IAAIG,EAAI,EAAIA,EAAID,EAAaC,IAChCjB,EAAciB,EAAEJ,GACfK,MAAK,EAACjB,SAACA,EAAQC,MAACA,MACfV,EAAA2B,OAAOC,QAAQ,uBAAqBnB,QAAiBC,UAEtDmB,OAAM,EAACpB,SAACA,EAAQC,MAACA,MAChBV,EAAA2B,OAAOG,QAAQ,sBAAoBrB,QAAeC,UAErDW,GAAcE","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n//Cайт бібліотекі : https://notiflix.github.io/notify\n\n//Приклад 1\n//Notify.success('Sol lucet omnibus');\n//Notify.failure('Qui timide rogat docet negare');\n\n//Приклад 2\n/*   createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }); */\n\n\nconst form = document.querySelector(\".form\");\nconst delayInput = form.querySelector(\"input[name = delay]\");\nconst stepInput = form.querySelector(\"input[name = step]\");\nconst amountInput = form.querySelector(\"input[name = amount]\");\n//const btnForm = document.querySelector(\"button\")\n\n\nform.addEventListener(\"submit\",onSubmitForm);\n\nfunction createPromise(position, delay) {\n  return newMuPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if(shouldResolve) {\n        resolve({position,delay});\n      } \n        reject({position,delay});\n    },delay);\n  });\n //return newMuPromise\n};\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  let delayValue = +delayInput.value;\n  let stepValue = +stepInput.value;\n  let amountValue = +amountInput.value + 1;\n\n  for (let i = 1 ; i < amountValue; i++){\n    createPromise(i,delayValue)\n    .then(({position,delay}) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    })\n    .catch(({position,delay}) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    })\n   delayValue += stepValue\n  }\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","newMuPromise","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayValue","value","stepValue","amountValue","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.325883a5.js.map"}